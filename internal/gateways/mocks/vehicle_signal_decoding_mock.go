// Code generated by MockGen. DO NOT EDIT.
// Source: vehicle_signal_decoding.go
//
// Generated by this command:
//
//	mockgen -source vehicle_signal_decoding.go -destination mocks/vehicle_signal_decoding_mock.go
//
// Package mock_gateways is a generated GoMock package.
package mock_gateways

import (
	reflect "reflect"

	models "github.com/DIMO-Network/edge-network/internal/models"
	device "github.com/DIMO-Network/shared/device"
	common "github.com/ethereum/go-ethereum/common"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockVehicleSignalDecoding is a mock of VehicleSignalDecoding interface.
type MockVehicleSignalDecoding struct {
	ctrl     *gomock.Controller
	recorder *MockVehicleSignalDecodingMockRecorder
}

// MockVehicleSignalDecodingMockRecorder is the mock recorder for MockVehicleSignalDecoding.
type MockVehicleSignalDecodingMockRecorder struct {
	mock *MockVehicleSignalDecoding
}

// NewMockVehicleSignalDecoding creates a new mock instance.
func NewMockVehicleSignalDecoding(ctrl *gomock.Controller) *MockVehicleSignalDecoding {
	mock := &MockVehicleSignalDecoding{ctrl: ctrl}
	mock.recorder = &MockVehicleSignalDecodingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVehicleSignalDecoding) EXPECT() *MockVehicleSignalDecodingMockRecorder {
	return m.recorder
}

// GetDBC mocks base method.
func (m *MockVehicleSignalDecoding) GetDBC(url string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDBC", url)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDBC indicates an expected call of GetDBC.
func (mr *MockVehicleSignalDecodingMockRecorder) GetDBC(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDBC", reflect.TypeOf((*MockVehicleSignalDecoding)(nil).GetDBC), url)
}

// GetDeviceSettings mocks base method.
func (m *MockVehicleSignalDecoding) GetDeviceSettings(url string) (*models.TemplateDeviceSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceSettings", url)
	ret0, _ := ret[0].(*models.TemplateDeviceSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceSettings indicates an expected call of GetDeviceSettings.
func (mr *MockVehicleSignalDecodingMockRecorder) GetDeviceSettings(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceSettings", reflect.TypeOf((*MockVehicleSignalDecoding)(nil).GetDeviceSettings), url)
}

// GetPIDs mocks base method.
func (m *MockVehicleSignalDecoding) GetPIDs(url string) (*models.TemplatePIDs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPIDs", url)
	ret0, _ := ret[0].(*models.TemplatePIDs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPIDs indicates an expected call of GetPIDs.
func (mr *MockVehicleSignalDecodingMockRecorder) GetPIDs(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPIDs", reflect.TypeOf((*MockVehicleSignalDecoding)(nil).GetPIDs), url)
}

// GetUrlsByEthAddr mocks base method.
func (m *MockVehicleSignalDecoding) GetUrlsByEthAddr(ethAddr *common.Address) (*device.ConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlsByEthAddr", ethAddr)
	ret0, _ := ret[0].(*device.ConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlsByEthAddr indicates an expected call of GetUrlsByEthAddr.
func (mr *MockVehicleSignalDecodingMockRecorder) GetUrlsByEthAddr(ethAddr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlsByEthAddr", reflect.TypeOf((*MockVehicleSignalDecoding)(nil).GetUrlsByEthAddr), ethAddr)
}

// GetUrlsByVin mocks base method.
func (m *MockVehicleSignalDecoding) GetUrlsByVin(vin string) (*device.ConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlsByVin", vin)
	ret0, _ := ret[0].(*device.ConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlsByVin indicates an expected call of GetUrlsByVin.
func (mr *MockVehicleSignalDecodingMockRecorder) GetUrlsByVin(vin any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlsByVin", reflect.TypeOf((*MockVehicleSignalDecoding)(nil).GetUrlsByVin), vin)
}

// UpdateDeviceConfigStatus mocks base method.
func (m *MockVehicleSignalDecoding) UpdateDeviceConfigStatus(ethAddr *common.Address, fwVersion string, unitID uuid.UUID, templateUrls *device.ConfigResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDeviceConfigStatus", ethAddr, fwVersion, unitID, templateUrls)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDeviceConfigStatus indicates an expected call of UpdateDeviceConfigStatus.
func (mr *MockVehicleSignalDecodingMockRecorder) UpdateDeviceConfigStatus(ethAddr, fwVersion, unitID, templateUrls any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDeviceConfigStatus", reflect.TypeOf((*MockVehicleSignalDecoding)(nil).UpdateDeviceConfigStatus), ethAddr, fwVersion, unitID, templateUrls)
}
