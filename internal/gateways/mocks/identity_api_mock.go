// Code generated by MockGen. DO NOT EDIT.
// Source: identity_api.go

// Package mock_gateways is a generated GoMock package.
package mock_gateways

import (
	reflect "reflect"

	models "github.com/DIMO-Network/edge-network/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockIdentityApi is a mock of identityApiSvc interface.
type MockIdentityApi struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityApiMockRecorder
}

// MockIdentityApiMockRecorder is the mock recorder for MockIdentityApi.
type MockIdentityApiMockRecorder struct {
	mock *MockIdentityApi
}

// NewMockIdentityApi creates a new mock instance.
func NewMockIdentityApi(ctrl *gomock.Controller) *MockIdentityApi {
	mock := &MockIdentityApi{ctrl: ctrl}
	mock.recorder = &MockIdentityApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentityApi) EXPECT() *MockIdentityApiMockRecorder {
	return m.recorder
}

// QueryIdentityAPIForVehicles mocks base method.
func (m *MockIdentityApi) QueryIdentityAPIForVehicles(ethAddress string) ([]models.VehicleInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryIdentityAPIForVehicles", ethAddress)
	ret0, _ := ret[0].([]models.VehicleInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryIdentityAPIForVehicles indicates an expected call of QueryIdentityAPIForVehicles.
func (mr *MockIdentityApiMockRecorder) QueryIdentityAPIForVehicles(ethAddress interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryIdentityAPIForVehicles", reflect.TypeOf((*MockIdentityApi)(nil).QueryIdentityAPIForVehicles), ethAddress)
}
