// Code generated by MockGen. DO NOT EDIT.
// Source: vehicle_signal_decoding_service.go
//
// Generated by this command:
//
//	mockgen -source vehicle_signal_decoding_service.go -destination mocks/vehicle_signal_decoding_service_mock.go
//
// Package mock_gateways is a generated GoMock package.
package mock_gateways

import (
	reflect "reflect"

	gateways "github.com/DIMO-Network/edge-network/internal/gateways"
	common "github.com/ethereum/go-ethereum/common"
	gomock "go.uber.org/mock/gomock"
)

// MockVehicleSignalDecodingAPIService is a mock of VehicleSignalDecodingAPIService interface.
type MockVehicleSignalDecodingAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockVehicleSignalDecodingAPIServiceMockRecorder
}

// MockVehicleSignalDecodingAPIServiceMockRecorder is the mock recorder for MockVehicleSignalDecodingAPIService.
type MockVehicleSignalDecodingAPIServiceMockRecorder struct {
	mock *MockVehicleSignalDecodingAPIService
}

// NewMockVehicleSignalDecodingAPIService creates a new mock instance.
func NewMockVehicleSignalDecodingAPIService(ctrl *gomock.Controller) *MockVehicleSignalDecodingAPIService {
	mock := &MockVehicleSignalDecodingAPIService{ctrl: ctrl}
	mock.recorder = &MockVehicleSignalDecodingAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVehicleSignalDecodingAPIService) EXPECT() *MockVehicleSignalDecodingAPIServiceMockRecorder {
	return m.recorder
}

// GetPIDs mocks base method.
func (m *MockVehicleSignalDecodingAPIService) GetPIDs(url string) (*gateways.PIDConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPIDs", url)
	ret0, _ := ret[0].(*gateways.PIDConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPIDs indicates an expected call of GetPIDs.
func (mr *MockVehicleSignalDecodingAPIServiceMockRecorder) GetPIDs(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPIDs", reflect.TypeOf((*MockVehicleSignalDecodingAPIService)(nil).GetPIDs), url)
}

// GetUrlsByEthAddr mocks base method.
func (m *MockVehicleSignalDecodingAPIService) GetUrlsByEthAddr(ethAddr *common.Address) (*gateways.URLConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlsByEthAddr", ethAddr)
	ret0, _ := ret[0].(*gateways.URLConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlsByEthAddr indicates an expected call of GetUrlsByEthAddr.
func (mr *MockVehicleSignalDecodingAPIServiceMockRecorder) GetUrlsByEthAddr(ethAddr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlsByEthAddr", reflect.TypeOf((*MockVehicleSignalDecodingAPIService)(nil).GetUrlsByEthAddr), ethAddr)
}

// GetUrlsByVin mocks base method.
func (m *MockVehicleSignalDecodingAPIService) GetUrlsByVin(vin string) (*gateways.URLConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlsByVin", vin)
	ret0, _ := ret[0].(*gateways.URLConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlsByVin indicates an expected call of GetUrlsByVin.
func (mr *MockVehicleSignalDecodingAPIServiceMockRecorder) GetUrlsByVin(vin any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlsByVin", reflect.TypeOf((*MockVehicleSignalDecodingAPIService)(nil).GetUrlsByVin), vin)
}
